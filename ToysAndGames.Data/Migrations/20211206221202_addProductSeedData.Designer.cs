// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToysAndGames.Data;

namespace ToysAndGames.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211206221202_addProductSeedData")]
    partial class addProductSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToysAndGames.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgeRestriction")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasCheckConstraint("CK_Product_AgeRestriction", "AgeRestriction >= 0 AND AgeRestriction <= 100");

                    b.HasCheckConstraint("CK_Product_Price", "Price >= 1 AND Price <= 1000");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeRestriction = 12,
                            Company = "company1",
                            Description = "product one",
                            Name = "product1",
                            Price = 20m
                        },
                        new
                        {
                            Id = 2,
                            AgeRestriction = 6,
                            Company = "company2",
                            Name = "product2",
                            Price = 100m
                        },
                        new
                        {
                            Id = 3,
                            Company = "company3",
                            Description = "product three",
                            Name = "product3",
                            Price = 75m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
